[
  {
    "type": "function",
    "fullyQualifiedName": "Array ",
    "fullyQualifiedKeyPath": [
      "Array "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "values"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.from ",
    "fullyQualifiedKeyPath": [
      "Array",
      "from "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "items"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "mapfn"
          ]
        },
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.isArray ",
    "fullyQualifiedKeyPath": [
      "Array",
      "isArray "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "arg"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.of ",
    "fullyQualifiedKeyPath": [
      "Array",
      "of "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "items"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Array.prototype",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "Array.@@species",
    "fullyQualifiedKeyPath": [
      "Array",
      "@@species"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.at ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "at "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "index"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.concat ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "concat "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "items"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Array.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.copyWithin ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "copyWithin "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "start"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "end"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.entries ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "entries "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.every ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "every "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "callbackfn"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.fill ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "fill "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "start"
          ]
        },
        {
          "children": [
            "end"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.filter ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "filter "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "callbackfn"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.find ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "find "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "predicate"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.findIndex ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "findIndex "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "predicate"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.flat ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "flat "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "depth"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.flatMap ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "flatMap "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "mapperFunction"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.forEach ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "forEach "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "callbackfn"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.includes ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "includes "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchElement"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "fromIndex"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.indexOf ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "indexOf "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchElement"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "fromIndex"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.join ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "join "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "separator"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.keys ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "keys "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.lastIndexOf ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "lastIndexOf "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchElement"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "fromIndex"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.map ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "map "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "callbackfn"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.pop ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "pop "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.push ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "push "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "items"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.reduce ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "reduce "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "callbackfn"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "initialValue"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.reduceRight ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "reduceRight "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "callbackfn"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "initialValue"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.reverse ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "reverse "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.shift ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "shift "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.slice ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "slice "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "start"
          ]
        },
        {
          "children": [
            "end"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.some ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "some "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "callbackfn"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.sort ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "sort "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "comparefn"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.splice ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "splice "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "start"
          ]
        },
        {
          "children": [
            "deleteCount"
          ]
        },
        {
          "children": [
            {
              "children": [
                "items"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.toLocaleString ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "toLocaleString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.unshift ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "unshift "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "items"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.values ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "values "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Array.prototype.@@iterator ",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "@@iterator "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Array.prototype.@@unscopables",
    "fullyQualifiedKeyPath": [
      "Array",
      "prototype",
      "@@unscopables"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "ArrayBuffer ",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "length"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "ArrayBuffer.isView ",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "isView "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "arg"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "ArrayBuffer.prototype",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "ArrayBuffer.@@species",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "@@species"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "ArrayBuffer.prototype.byteLength",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype",
      "byteLength"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "ArrayBuffer.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "ArrayBuffer.prototype.slice ",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype",
      "slice "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "start"
          ]
        },
        {
          "children": [
            "end"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "ArrayBuffer.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "ArrayBuffer ",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "length"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "ArrayBuffer.isView ",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "isView "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "arg"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "ArrayBuffer.prototype",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "ArrayBuffer.@@species",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "@@species"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "ArrayBuffer.prototype.byteLength",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype",
      "byteLength"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "ArrayBuffer.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "ArrayBuffer.prototype.slice ",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype",
      "slice "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "start"
          ]
        },
        {
          "children": [
            "end"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "ArrayBuffer.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "ArrayBuffer",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "AsyncGeneratorFunction.length",
    "fullyQualifiedKeyPath": [
      "AsyncGeneratorFunction",
      "length"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "AsyncGeneratorFunction.prototype",
    "fullyQualifiedKeyPath": [
      "AsyncGeneratorFunction",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "AsyncGeneratorFunction.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "AsyncGeneratorFunction",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "AsyncGeneratorFunction.prototype.prototype",
    "fullyQualifiedKeyPath": [
      "AsyncGeneratorFunction",
      "prototype",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "AsyncGeneratorFunction.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "AsyncGeneratorFunction",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Atomics",
    "fullyQualifiedKeyPath": [
      "Atomics"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.add ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "add "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.and ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "and "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.compareExchange ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "compareExchange "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "expectedValue"
          ]
        },
        {
          "children": [
            "replacementValue"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.exchange ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "exchange "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.isLockFree ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "isLockFree "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "size"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.load ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "load "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.or ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "or "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.store ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "store "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.sub ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "sub "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.wait ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "wait "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "value"
          ]
        },
        {
          "children": [
            "timeout"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.notify ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "notify "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "count"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Atomics.xor ",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "xor "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "typedArray"
          ]
        },
        {
          "children": [
            "index"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Atomics.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "Atomics",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "BigInt ",
    "fullyQualifiedKeyPath": [
      "BigInt "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "BigInt.asIntN ",
    "fullyQualifiedKeyPath": [
      "BigInt",
      "asIntN "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "bits"
          ]
        },
        {
          "children": [
            "bigint"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "BigInt.asUintN ",
    "fullyQualifiedKeyPath": [
      "BigInt",
      "asUintN "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "bits"
          ]
        },
        {
          "children": [
            "bigint"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "BigInt.prototype",
    "fullyQualifiedKeyPath": [
      "BigInt",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "BigInt.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "BigInt",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "BigInt.prototype.toLocaleString ",
    "fullyQualifiedKeyPath": [
      "BigInt",
      "prototype",
      "toLocaleString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "BigInt.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "BigInt",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "radix"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "BigInt.prototype.valueOf ",
    "fullyQualifiedKeyPath": [
      "BigInt",
      "prototype",
      "valueOf "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "BigInt.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "BigInt",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Boolean ",
    "fullyQualifiedKeyPath": [
      "Boolean "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Boolean.prototype",
    "fullyQualifiedKeyPath": [
      "Boolean",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Boolean.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Boolean",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Boolean.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "Boolean",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Boolean.prototype.valueOf ",
    "fullyQualifiedKeyPath": [
      "Boolean",
      "prototype",
      "valueOf "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView ",
    "fullyQualifiedKeyPath": [
      "DataView "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "buffer"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "byteLength"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "DataView.prototype",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "DataView.prototype.buffer",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "buffer"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "DataView.prototype.byteLength",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "byteLength"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "DataView.prototype.byteOffset",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "byteOffset"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "DataView.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getBigInt64 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getBigInt64 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getBigUint64 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getBigUint64 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getFloat32 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getFloat32 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getFloat64 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getFloat64 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getInt8 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getInt8 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getInt16 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getInt16 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getInt32 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getInt32 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getUint8 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getUint8 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getUint16 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getUint16 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.getUint32 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "getUint32 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setBigInt64 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setBigInt64 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setBigUint64 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setBigUint64 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setFloat32 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setFloat32 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setFloat64 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setFloat64 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setInt8 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setInt8 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setInt16 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setInt16 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setInt32 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setInt32 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setUint8 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setUint8 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setUint16 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setUint16 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "DataView.prototype.setUint32 ",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "setUint32 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "byteOffset"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "littleEndian"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "DataView.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "DataView",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date ",
    "fullyQualifiedKeyPath": [
      "Date "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "values"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.now ",
    "fullyQualifiedKeyPath": [
      "Date",
      "now "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.parse ",
    "fullyQualifiedKeyPath": [
      "Date",
      "parse "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Date.prototype",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.UTC ",
    "fullyQualifiedKeyPath": [
      "Date",
      "UTC "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "year"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "month"
          ]
        },
        {
          "children": [
            "date"
          ]
        },
        {
          "children": [
            "hours"
          ]
        },
        {
          "children": [
            "minutes"
          ]
        },
        {
          "children": [
            "seconds"
          ]
        },
        {
          "children": [
            "ms"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Date.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getDate ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getDate "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getDay ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getDay "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getFullYear ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getFullYear "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getHours ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getHours "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getMilliseconds ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getMilliseconds "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getMinutes ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getMinutes "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getMonth ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getMonth "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getSeconds ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getSeconds "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getTime ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getTime "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getTimezoneOffset ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getTimezoneOffset "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getUTCDate ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getUTCDate "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getUTCDay ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getUTCDay "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getUTCFullYear ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getUTCFullYear "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getUTCHours ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getUTCHours "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getUTCMilliseconds ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getUTCMilliseconds "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getUTCMinutes ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getUTCMinutes "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getUTCMonth ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getUTCMonth "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.getUTCSeconds ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "getUTCSeconds "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setDate ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setDate "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "date"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setFullYear ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setFullYear "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "year"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "month"
          ]
        },
        {
          "children": [
            "date"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setHours ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setHours "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "hour"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "min"
          ]
        },
        {
          "children": [
            "sec"
          ]
        },
        {
          "children": [
            "ms"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setMilliseconds ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setMilliseconds "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "ms"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setMinutes ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setMinutes "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "min"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "sec"
          ]
        },
        {
          "children": [
            "ms"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setMonth ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setMonth "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "month"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "date"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setSeconds ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setSeconds "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "sec"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "ms"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setTime ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setTime "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "time"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setUTCDate ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setUTCDate "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "date"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setUTCFullYear ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setUTCFullYear "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "year"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "month"
          ]
        },
        {
          "children": [
            "date"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setUTCHours ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setUTCHours "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "hour"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "min"
          ]
        },
        {
          "children": [
            "sec"
          ]
        },
        {
          "children": [
            "ms"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setUTCMilliseconds ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setUTCMilliseconds "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "ms"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setUTCMinutes ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setUTCMinutes "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "min"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "sec"
          ]
        },
        {
          "children": [
            "ms"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setUTCMonth ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setUTCMonth "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "month"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "date"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.setUTCSeconds ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "setUTCSeconds "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "sec"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "ms"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.toDateString ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "toDateString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.toISOString ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "toISOString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.toJSON ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "toJSON "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.toLocaleDateString ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "toLocaleDateString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.toLocaleString ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "toLocaleString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.toLocaleTimeString ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "toLocaleTimeString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.toTimeString ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "toTimeString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.toUTCString ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "toUTCString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.valueOf ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "valueOf "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Date.prototype.@@toPrimitive ",
    "fullyQualifiedKeyPath": [
      "Date",
      "prototype",
      "@@toPrimitive "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "hint"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "decodeURI ",
    "fullyQualifiedKeyPath": [
      "decodeURI "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "encodedURI"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "decodeURIComponent ",
    "fullyQualifiedKeyPath": [
      "decodeURIComponent "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "encodedURIComponent"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "decodeURIComponent ",
    "fullyQualifiedKeyPath": [
      "decodeURIComponent "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "encodedURIComponent"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "encodeURI ",
    "fullyQualifiedKeyPath": [
      "encodeURI "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "uri"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "encodeURIComponent ",
    "fullyQualifiedKeyPath": [
      "encodeURIComponent "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "uriComponent"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "encodeURIComponent ",
    "fullyQualifiedKeyPath": [
      "encodeURIComponent "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "uriComponent"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Error ",
    "fullyQualifiedKeyPath": [
      "Error "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "message"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "options"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Error.prototype",
    "fullyQualifiedKeyPath": [
      "Error",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Error.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Error",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Error.prototype.message",
    "fullyQualifiedKeyPath": [
      "Error",
      "prototype",
      "message"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Error.prototype.name",
    "fullyQualifiedKeyPath": [
      "Error",
      "prototype",
      "name"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Error.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "Error",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "eval ",
    "fullyQualifiedKeyPath": [
      "eval "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Function.length",
    "fullyQualifiedKeyPath": [
      "Function",
      "length"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Function.prototype",
    "fullyQualifiedKeyPath": [
      "Function",
      "prototype"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Function.prototype.apply ",
    "fullyQualifiedKeyPath": [
      "Function",
      "prototype",
      "apply "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "thisArg"
          ]
        },
        {
          "children": [
            "argArray"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Function.prototype.bind ",
    "fullyQualifiedKeyPath": [
      "Function",
      "prototype",
      "bind "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "thisArg"
          ]
        },
        {
          "children": [
            {
              "children": [
                "args"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Function.prototype.call ",
    "fullyQualifiedKeyPath": [
      "Function",
      "prototype",
      "call "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "thisArg"
          ]
        },
        {
          "children": [
            {
              "children": [
                "args"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Function.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Function",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Function.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "Function",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Function.prototype.@@hasInstance ",
    "fullyQualifiedKeyPath": [
      "Function",
      "prototype",
      "@@hasInstance "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "V"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "GeneratorFunction.length",
    "fullyQualifiedKeyPath": [
      "GeneratorFunction",
      "length"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "GeneratorFunction.prototype",
    "fullyQualifiedKeyPath": [
      "GeneratorFunction",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "GeneratorFunction.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "GeneratorFunction",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "GeneratorFunction.prototype.prototype",
    "fullyQualifiedKeyPath": [
      "GeneratorFunction",
      "prototype",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "GeneratorFunction.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "GeneratorFunction",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "isFinite ",
    "fullyQualifiedKeyPath": [
      "isFinite "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "number"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "isNaN ",
    "fullyQualifiedKeyPath": [
      "isNaN "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "number"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "JSON",
    "fullyQualifiedKeyPath": [
      "JSON"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "JSON.parse ",
    "fullyQualifiedKeyPath": [
      "JSON",
      "parse "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "text"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "reviver"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "JSON.stringify ",
    "fullyQualifiedKeyPath": [
      "JSON",
      "stringify "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "replacer"
          ]
        },
        {
          "children": [
            "space"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "JSON.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "JSON",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map ",
    "fullyQualifiedKeyPath": [
      "Map "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "iterable"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Map.prototype",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "Map.@@species",
    "fullyQualifiedKeyPath": [
      "Map",
      "@@species"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.clear ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "clear "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Map.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.delete ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "delete "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.entries ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "entries "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.forEach ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "forEach "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "callbackfn"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.get ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "get "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.has ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "has "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.keys ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "keys "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.set ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "set "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "getter",
    "fullyQualifiedName": "Map.prototype.size",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "size"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.values ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "values "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Map.prototype.@@iterator ",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "@@iterator "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Map.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "Map",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math",
    "fullyQualifiedKeyPath": [
      "Math"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math.E",
    "fullyQualifiedKeyPath": [
      "Math",
      "E"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math.LN10",
    "fullyQualifiedKeyPath": [
      "Math",
      "LN10"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math.LN2",
    "fullyQualifiedKeyPath": [
      "Math",
      "LN2"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math.LOG10E",
    "fullyQualifiedKeyPath": [
      "Math",
      "LOG10E"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math.LOG2E",
    "fullyQualifiedKeyPath": [
      "Math",
      "LOG2E"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math.PI",
    "fullyQualifiedKeyPath": [
      "Math",
      "PI"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math.SQRT1_2",
    "fullyQualifiedKeyPath": [
      "Math",
      "SQRT1_2"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math.SQRT2",
    "fullyQualifiedKeyPath": [
      "Math",
      "SQRT2"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Math.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "Math",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.abs ",
    "fullyQualifiedKeyPath": [
      "Math",
      "abs "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.acos ",
    "fullyQualifiedKeyPath": [
      "Math",
      "acos "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.acosh ",
    "fullyQualifiedKeyPath": [
      "Math",
      "acosh "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.asin ",
    "fullyQualifiedKeyPath": [
      "Math",
      "asin "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.asinh ",
    "fullyQualifiedKeyPath": [
      "Math",
      "asinh "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.atan ",
    "fullyQualifiedKeyPath": [
      "Math",
      "atan "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.atanh ",
    "fullyQualifiedKeyPath": [
      "Math",
      "atanh "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.atan2 ",
    "fullyQualifiedKeyPath": [
      "Math",
      "atan2 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "y"
          ]
        },
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.cbrt ",
    "fullyQualifiedKeyPath": [
      "Math",
      "cbrt "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.ceil ",
    "fullyQualifiedKeyPath": [
      "Math",
      "ceil "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.clz32 ",
    "fullyQualifiedKeyPath": [
      "Math",
      "clz32 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.cos ",
    "fullyQualifiedKeyPath": [
      "Math",
      "cos "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.cosh ",
    "fullyQualifiedKeyPath": [
      "Math",
      "cosh "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.exp ",
    "fullyQualifiedKeyPath": [
      "Math",
      "exp "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.expm1 ",
    "fullyQualifiedKeyPath": [
      "Math",
      "expm1 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.floor ",
    "fullyQualifiedKeyPath": [
      "Math",
      "floor "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.fround ",
    "fullyQualifiedKeyPath": [
      "Math",
      "fround "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.hypot ",
    "fullyQualifiedKeyPath": [
      "Math",
      "hypot "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "args"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.imul ",
    "fullyQualifiedKeyPath": [
      "Math",
      "imul "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        },
        {
          "children": [
            "y"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.log ",
    "fullyQualifiedKeyPath": [
      "Math",
      "log "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.log1p ",
    "fullyQualifiedKeyPath": [
      "Math",
      "log1p "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.log10 ",
    "fullyQualifiedKeyPath": [
      "Math",
      "log10 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.log2 ",
    "fullyQualifiedKeyPath": [
      "Math",
      "log2 "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.max ",
    "fullyQualifiedKeyPath": [
      "Math",
      "max "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "args"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.min ",
    "fullyQualifiedKeyPath": [
      "Math",
      "min "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "args"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.pow ",
    "fullyQualifiedKeyPath": [
      "Math",
      "pow "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "base"
          ]
        },
        {
          "children": [
            "exponent"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.random ",
    "fullyQualifiedKeyPath": [
      "Math",
      "random "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.round ",
    "fullyQualifiedKeyPath": [
      "Math",
      "round "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.sign ",
    "fullyQualifiedKeyPath": [
      "Math",
      "sign "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.sin ",
    "fullyQualifiedKeyPath": [
      "Math",
      "sin "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.sinh ",
    "fullyQualifiedKeyPath": [
      "Math",
      "sinh "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.sqrt ",
    "fullyQualifiedKeyPath": [
      "Math",
      "sqrt "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.tan ",
    "fullyQualifiedKeyPath": [
      "Math",
      "tan "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.tanh ",
    "fullyQualifiedKeyPath": [
      "Math",
      "tanh "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Math.trunc ",
    "fullyQualifiedKeyPath": [
      "Math",
      "trunc "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number ",
    "fullyQualifiedKeyPath": [
      "Number "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.EPSILON",
    "fullyQualifiedKeyPath": [
      "Number",
      "EPSILON"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.isFinite ",
    "fullyQualifiedKeyPath": [
      "Number",
      "isFinite "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "number"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.isInteger ",
    "fullyQualifiedKeyPath": [
      "Number",
      "isInteger "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "number"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.isNaN ",
    "fullyQualifiedKeyPath": [
      "Number",
      "isNaN "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "number"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.isSafeInteger ",
    "fullyQualifiedKeyPath": [
      "Number",
      "isSafeInteger "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "number"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.MAX_SAFE_INTEGER",
    "fullyQualifiedKeyPath": [
      "Number",
      "MAX_SAFE_INTEGER"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.MAX_VALUE",
    "fullyQualifiedKeyPath": [
      "Number",
      "MAX_VALUE"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.MIN_SAFE_INTEGER",
    "fullyQualifiedKeyPath": [
      "Number",
      "MIN_SAFE_INTEGER"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.MIN_VALUE",
    "fullyQualifiedKeyPath": [
      "Number",
      "MIN_VALUE"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.NaN",
    "fullyQualifiedKeyPath": [
      "Number",
      "NaN"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.NEGATIVE_INFINITY",
    "fullyQualifiedKeyPath": [
      "Number",
      "NEGATIVE_INFINITY"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.parseFloat ",
    "fullyQualifiedKeyPath": [
      "Number",
      "parseFloat "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.parseInt ",
    "fullyQualifiedKeyPath": [
      "Number",
      "parseInt "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        },
        {
          "children": [
            "radix"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.POSITIVE_INFINITY",
    "fullyQualifiedKeyPath": [
      "Number",
      "POSITIVE_INFINITY"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.prototype",
    "fullyQualifiedKeyPath": [
      "Number",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Number.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Number",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.prototype.toExponential ",
    "fullyQualifiedKeyPath": [
      "Number",
      "prototype",
      "toExponential "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "fractionDigits"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.prototype.toFixed ",
    "fullyQualifiedKeyPath": [
      "Number",
      "prototype",
      "toFixed "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "fractionDigits"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.prototype.toLocaleString ",
    "fullyQualifiedKeyPath": [
      "Number",
      "prototype",
      "toLocaleString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.prototype.toPrecision ",
    "fullyQualifiedKeyPath": [
      "Number",
      "prototype",
      "toPrecision "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "precision"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "Number",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "radix"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Number.prototype.valueOf ",
    "fullyQualifiedKeyPath": [
      "Number",
      "prototype",
      "valueOf "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object ",
    "fullyQualifiedKeyPath": [
      "Object "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "value"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.assign ",
    "fullyQualifiedKeyPath": [
      "Object",
      "assign "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            {
              "children": [
                "sources"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.create ",
    "fullyQualifiedKeyPath": [
      "Object",
      "create "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        },
        {
          "children": [
            "Properties"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.defineProperties ",
    "fullyQualifiedKeyPath": [
      "Object",
      "defineProperties "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        },
        {
          "children": [
            "Properties"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.defineProperty ",
    "fullyQualifiedKeyPath": [
      "Object",
      "defineProperty "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        },
        {
          "children": [
            "P"
          ]
        },
        {
          "children": [
            "Attributes"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.entries ",
    "fullyQualifiedKeyPath": [
      "Object",
      "entries "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.freeze ",
    "fullyQualifiedKeyPath": [
      "Object",
      "freeze "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.fromEntries ",
    "fullyQualifiedKeyPath": [
      "Object",
      "fromEntries "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "iterable"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.getOwnPropertyDescriptor ",
    "fullyQualifiedKeyPath": [
      "Object",
      "getOwnPropertyDescriptor "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        },
        {
          "children": [
            "P"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.getOwnPropertyDescriptors ",
    "fullyQualifiedKeyPath": [
      "Object",
      "getOwnPropertyDescriptors "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.getOwnPropertyNames ",
    "fullyQualifiedKeyPath": [
      "Object",
      "getOwnPropertyNames "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.getOwnPropertySymbols ",
    "fullyQualifiedKeyPath": [
      "Object",
      "getOwnPropertySymbols "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.getPrototypeOf ",
    "fullyQualifiedKeyPath": [
      "Object",
      "getPrototypeOf "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.hasOwn ",
    "fullyQualifiedKeyPath": [
      "Object",
      "hasOwn "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        },
        {
          "children": [
            "P"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.is ",
    "fullyQualifiedKeyPath": [
      "Object",
      "is "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value1"
          ]
        },
        {
          "children": [
            "value2"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.isExtensible ",
    "fullyQualifiedKeyPath": [
      "Object",
      "isExtensible "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.isFrozen ",
    "fullyQualifiedKeyPath": [
      "Object",
      "isFrozen "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.isSealed ",
    "fullyQualifiedKeyPath": [
      "Object",
      "isSealed "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.keys ",
    "fullyQualifiedKeyPath": [
      "Object",
      "keys "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.preventExtensions ",
    "fullyQualifiedKeyPath": [
      "Object",
      "preventExtensions "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Object.prototype",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.seal ",
    "fullyQualifiedKeyPath": [
      "Object",
      "seal "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.setPrototypeOf ",
    "fullyQualifiedKeyPath": [
      "Object",
      "setPrototypeOf "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        },
        {
          "children": [
            "proto"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.values ",
    "fullyQualifiedKeyPath": [
      "Object",
      "values "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "O"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Object.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.hasOwnProperty ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "hasOwnProperty "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "V"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.isPrototypeOf ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "isPrototypeOf "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "V"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.propertyIsEnumerable ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "propertyIsEnumerable "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "V"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.toLocaleString ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "toLocaleString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.valueOf ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "valueOf "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Object.prototype.__proto__",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "__proto__"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "Object.prototype.__proto__",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "__proto__"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.__defineGetter__ ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "__defineGetter__ "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "P"
          ]
        },
        {
          "children": [
            "getter"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.__defineSetter__ ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "__defineSetter__ "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "P"
          ]
        },
        {
          "children": [
            "setter"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.__lookupGetter__ ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "__lookupGetter__ "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "P"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Object.prototype.__lookupSetter__ ",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "__lookupSetter__ "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "P"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "parseFloat ",
    "fullyQualifiedKeyPath": [
      "parseFloat "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "parseInt ",
    "fullyQualifiedKeyPath": [
      "parseInt "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        },
        {
          "children": [
            "radix"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise ",
    "fullyQualifiedKeyPath": [
      "Promise "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "executor"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise.all ",
    "fullyQualifiedKeyPath": [
      "Promise",
      "all "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "iterable"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise.allSettled ",
    "fullyQualifiedKeyPath": [
      "Promise",
      "allSettled "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "iterable"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise.any ",
    "fullyQualifiedKeyPath": [
      "Promise",
      "any "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "iterable"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Promise.prototype",
    "fullyQualifiedKeyPath": [
      "Promise",
      "prototype"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise.race ",
    "fullyQualifiedKeyPath": [
      "Promise",
      "race "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "iterable"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise.reject ",
    "fullyQualifiedKeyPath": [
      "Promise",
      "reject "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "r"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise.resolve ",
    "fullyQualifiedKeyPath": [
      "Promise",
      "resolve "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "x"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "getter",
    "fullyQualifiedName": "Promise.@@species",
    "fullyQualifiedKeyPath": [
      "Promise",
      "@@species"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise.prototype.catch ",
    "fullyQualifiedKeyPath": [
      "Promise",
      "prototype",
      "catch "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "onRejected"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Promise.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Promise",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise.prototype.finally ",
    "fullyQualifiedKeyPath": [
      "Promise",
      "prototype",
      "finally "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "onFinally"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Promise.prototype.then ",
    "fullyQualifiedKeyPath": [
      "Promise",
      "prototype",
      "then "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "onFulfilled"
          ]
        },
        {
          "children": [
            "onRejected"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Promise.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "Promise",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Proxy ",
    "fullyQualifiedKeyPath": [
      "Proxy "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "handler"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Proxy.revocable ",
    "fullyQualifiedKeyPath": [
      "Proxy",
      "revocable "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "handler"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Reflect",
    "fullyQualifiedKeyPath": [
      "Reflect"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.apply ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "apply "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "thisArgument"
          ]
        },
        {
          "children": [
            "argumentsList"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.construct ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "construct "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "argumentsList"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "newTarget"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.defineProperty ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "defineProperty "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "propertyKey"
          ]
        },
        {
          "children": [
            "attributes"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.deleteProperty ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "deleteProperty "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "propertyKey"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.get ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "get "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "propertyKey"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "receiver"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.getOwnPropertyDescriptor ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "getOwnPropertyDescriptor "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "propertyKey"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.getPrototypeOf ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "getPrototypeOf "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.has ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "has "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "propertyKey"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.isExtensible ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "isExtensible "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.ownKeys ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "ownKeys "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.preventExtensions ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "preventExtensions "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.set ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "set "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "propertyKey"
          ]
        },
        {
          "children": [
            "V"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "receiver"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Reflect.setPrototypeOf ",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "setPrototypeOf "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "target"
          ]
        },
        {
          "children": [
            "proto"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Reflect.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "Reflect",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp ",
    "fullyQualifiedKeyPath": [
      "RegExp "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "Regular"
          ]
        },
        {
          "children": [
            "Expression"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp ",
    "fullyQualifiedKeyPath": [
      "RegExp "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "pattern"
          ]
        },
        {
          "children": [
            "flags"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "RegExp.prototype",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.@@species",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "@@species"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "RegExp.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp.prototype.exec ",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "exec "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.prototype.dotAll",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "dotAll"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.prototype.flags",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "flags"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.prototype.global",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "global"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.prototype.hasIndices",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "hasIndices"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.prototype.ignoreCase",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "ignoreCase"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp.prototype.@@match ",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "@@match "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp.prototype.@@matchAll ",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "@@matchAll "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.prototype.multiline",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "multiline"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp.prototype.@@replace ",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "@@replace "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        },
        {
          "children": [
            "replaceValue"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp.prototype.@@search ",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "@@search "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.prototype.source",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "source"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp.prototype.@@split ",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "@@split "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "string"
          ]
        },
        {
          "children": [
            "limit"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.prototype.sticky",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "sticky"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp.prototype.test ",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "test "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "S"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "RegExp.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "getter",
    "fullyQualifiedName": "RegExp.prototype.unicode",
    "fullyQualifiedKeyPath": [
      "RegExp",
      "prototype",
      "unicode"
    ]
  },
  {
    "type": "setter",
    "fullyQualifiedName": "Object.prototype.__proto__",
    "fullyQualifiedKeyPath": [
      "Object",
      "prototype",
      "__proto__"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set ",
    "fullyQualifiedKeyPath": [
      "Set "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "iterable"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Set.prototype",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "Set.@@species",
    "fullyQualifiedKeyPath": [
      "Set",
      "@@species"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set.prototype.add ",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "add "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set.prototype.clear ",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "clear "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Set.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set.prototype.delete ",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "delete "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set.prototype.entries ",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "entries "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set.prototype.forEach ",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "forEach "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "callbackfn"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "thisArg"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set.prototype.has ",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "has "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set.prototype.keys ",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "keys "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "getter",
    "fullyQualifiedName": "Set.prototype.size",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "size"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set.prototype.values ",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "values "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Set.prototype.@@iterator ",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "@@iterator "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Set.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "Set",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "SharedArrayBuffer ",
    "fullyQualifiedKeyPath": [
      "SharedArrayBuffer "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "length"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "SharedArrayBuffer.prototype",
    "fullyQualifiedKeyPath": [
      "SharedArrayBuffer",
      "prototype"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "SharedArrayBuffer.@@species",
    "fullyQualifiedKeyPath": [
      "SharedArrayBuffer",
      "@@species"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "SharedArrayBuffer.prototype.byteLength",
    "fullyQualifiedKeyPath": [
      "SharedArrayBuffer",
      "prototype",
      "byteLength"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "SharedArrayBuffer.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "SharedArrayBuffer",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "SharedArrayBuffer.prototype.slice ",
    "fullyQualifiedKeyPath": [
      "SharedArrayBuffer",
      "prototype",
      "slice "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "start"
          ]
        },
        {
          "children": [
            "end"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "SharedArrayBuffer.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "SharedArrayBuffer",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "String ",
    "fullyQualifiedKeyPath": [
      "String "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.fromCharCode ",
    "fullyQualifiedKeyPath": [
      "String",
      "fromCharCode "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "codeUnits"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.fromCodePoint ",
    "fullyQualifiedKeyPath": [
      "String",
      "fromCodePoint "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "codePoints"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "String.prototype",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.raw ",
    "fullyQualifiedKeyPath": [
      "String",
      "raw "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "template"
          ]
        },
        {
          "children": [
            {
              "children": [
                "substitutions"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.at ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "at "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "index"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.charAt ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "charAt "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "pos"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.charCodeAt ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "charCodeAt "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "pos"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.codePointAt ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "codePointAt "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "pos"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.concat ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "concat "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            {
              "children": [
                "args"
              ]
            }
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "String.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.endsWith ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "endsWith "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchString"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "endPosition"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.includes ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "includes "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchString"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "position"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.indexOf ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "indexOf "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchString"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "position"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.lastIndexOf ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "lastIndexOf "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchString"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "position"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.localeCompare ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "localeCompare "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "that"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.match ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "match "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "regexp"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.matchAll ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "matchAll "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "regexp"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.normalize ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "normalize "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "form"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.padEnd ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "padEnd "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "maxLength"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "fillString"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.padStart ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "padStart "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "maxLength"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "fillString"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.repeat ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "repeat "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "count"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.replace ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "replace "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchValue"
          ]
        },
        {
          "children": [
            "replaceValue"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.replaceAll ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "replaceAll "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchValue"
          ]
        },
        {
          "children": [
            "replaceValue"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.search ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "search "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "regexp"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.slice ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "slice "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "start"
          ]
        },
        {
          "children": [
            "end"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.split ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "split "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "separator"
          ]
        },
        {
          "children": [
            "limit"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.startsWith ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "startsWith "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "searchString"
          ]
        }
      ],
      "optional": [
        {
          "children": [
            "position"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.substring ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "substring "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "start"
          ]
        },
        {
          "children": [
            "end"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.toLocaleLowerCase ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "toLocaleLowerCase "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.toLocaleUpperCase ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "toLocaleUpperCase "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "reserved1"
          ]
        },
        {
          "children": [
            "reserved2"
          ]
        }
      ]
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.toLowerCase ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "toLowerCase "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.toUpperCase ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "toUpperCase "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.trim ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "trim "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.trimEnd ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "trimEnd "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.trimStart ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "trimStart "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.valueOf ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "valueOf "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "String.prototype.@@iterator ",
    "fullyQualifiedKeyPath": [
      "String",
      "prototype",
      "@@iterator "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Symbol ",
    "fullyQualifiedKeyPath": [
      "Symbol "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "description"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.asyncIterator",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "asyncIterator"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Symbol.for ",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "for "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.hasInstance",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "hasInstance"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.isConcatSpreadable",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "isConcatSpreadable"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.iterator",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "iterator"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Symbol.keyFor ",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "keyFor "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "sym"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.match",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "match"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.matchAll",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "matchAll"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.prototype",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.replace",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "replace"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.search",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "search"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.species",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "species"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.split",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "split"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.toPrimitive",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "toPrimitive"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.toStringTag",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "toStringTag"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.unscopables",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "unscopables"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "getter",
    "fullyQualifiedName": "Symbol.prototype.description",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "prototype",
      "description"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "Symbol.prototype.toString ",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "prototype",
      "toString "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Symbol.prototype.valueOf ",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "prototype",
      "valueOf "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "Symbol.prototype.@@toPrimitive ",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "prototype",
      "@@toPrimitive "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "hint"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "Symbol.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "Symbol",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "WeakMap ",
    "fullyQualifiedKeyPath": [
      "WeakMap "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "iterable"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "WeakMap.prototype",
    "fullyQualifiedKeyPath": [
      "WeakMap",
      "prototype"
    ]
  },
  {
    "type": "object",
    "fullyQualifiedName": "WeakMap.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "WeakMap",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "WeakMap.prototype.delete ",
    "fullyQualifiedKeyPath": [
      "WeakMap",
      "prototype",
      "delete "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "WeakMap.prototype.get ",
    "fullyQualifiedKeyPath": [
      "WeakMap",
      "prototype",
      "get "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "WeakMap.prototype.has ",
    "fullyQualifiedKeyPath": [
      "WeakMap",
      "prototype",
      "has "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "WeakMap.prototype.set ",
    "fullyQualifiedKeyPath": [
      "WeakMap",
      "prototype",
      "set "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "key"
          ]
        },
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "WeakMap.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "WeakMap",
      "prototype",
      "@@toStringTag"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "WeakSet ",
    "fullyQualifiedKeyPath": [
      "WeakSet "
    ],
    "[[FormalParameters]]": {
      "required": [],
      "optional": [
        {
          "children": [
            "iterable"
          ]
        }
      ]
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "WeakSet.prototype",
    "fullyQualifiedKeyPath": [
      "WeakSet",
      "prototype"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "WeakSet.prototype.add ",
    "fullyQualifiedKeyPath": [
      "WeakSet",
      "prototype",
      "add "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "WeakSet.prototype.constructor",
    "fullyQualifiedKeyPath": [
      "WeakSet",
      "prototype",
      "constructor"
    ]
  },
  {
    "type": "function",
    "fullyQualifiedName": "WeakSet.prototype.delete ",
    "fullyQualifiedKeyPath": [
      "WeakSet",
      "prototype",
      "delete "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "function",
    "fullyQualifiedName": "WeakSet.prototype.has ",
    "fullyQualifiedKeyPath": [
      "WeakSet",
      "prototype",
      "has "
    ],
    "[[FormalParameters]]": {
      "required": [
        {
          "children": [
            "value"
          ]
        }
      ],
      "optional": []
    }
  },
  {
    "type": "object",
    "fullyQualifiedName": "WeakSet.prototype.@@toStringTag",
    "fullyQualifiedKeyPath": [
      "WeakSet",
      "prototype",
      "@@toStringTag"
    ]
  }
]